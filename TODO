- Limit the player to a pre-set grid (clipping, cba dealing with the resources)         [x]
- Add a box of some sort to show the user that they can't go past that pre-set grid


- Add firing code (Automatic)
- Make the firing messages unique to the server

- Look at unloading resources (whether it is necessary or not)
- Make the terrain rendering a bit more sane
    - Bumpmapping over a plain black/purple underlay
    - Specular + diffuse lighting over that bump map
    - Using the player as a light source

- Add collision detection between firing
- Improve the camera control (Add mouse/something hints?)
- Add a specular map to the hovercraft (possibly)

- Write a basic state engine for the actual game
- Add a loading screen, show percentage on the loading screen
- Hovercraft should be able to blow up, them be particles too

- The game itself - add power-ups

--------------------- WORK BELOW COMPLETED --------------------------

- Add collision detection between entities (players and landscape models)

- Add a particle system
    - Hovercraft should emit particles of some sort, probably slow decay, low gravity

- Add the ability to jump to the hovercraft's controls (space??)

- Add multiplayer code so we can move a few players around in the world
    - First up, the logic for our single player needs to run on the server
    - Commands sent to the craft on client should also be sent to run on the server
    - Server should update craft position/velocity periodically


- Add a camera class that has the ability to 
	- Be positioned																	     [x]
	- Look at stuff																		 

- Add the camera class to the single square test so it still works						  [x]					
- Write a server to serve the shader files in a nice format								 [x]
- Add the world matrix into the equation													[x]

- Add a 'game loop'																		 [x]

- Write a shader that can do colouring based on a list of colours						   [x]

- Give entities a 'type' or 'category' and methods to request entities via these            [x] // not relevant, doing it by id
- Allow entities to have logic and receive messages from the controller                     [x] // not relevant
- Allow entities to take control over the camera                                            [x] // Entities get given the scene
- Allow entities to talk to each other (directly, whatever)                                 [x]

- Write a VERY basic grid terrain renderer with colour based on height					  [x]
- Write some code to hug the terrain (camera)			                                   [x]										
- Write some code to allow moving around the terrain (WASD)								 [x]

- Add some texture to the terrain (just so we have some scale when moving around)	       [x]
- Create procedural terrain definition generator											[x]
- Put the generator server-side															 [x]		

- Add some light blue fog (easier than adding a skybox)										
- Add models to the landscape (trees, houses)                                           [x] // Not a priority any more
- Add player model                                                                      [x]
- Add controls and basic physics to move player model                                   [x]
- Write code for camera to follow player model about cleanly                            [x]