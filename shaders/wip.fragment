#ifdef GL_ES
precision highp float;
#endif

varying vec2 vTextureCoord;
varying vec3 vVectorToLight;
varying vec3 vViewDirection;
varying vec3 vNormal;
varying vec3 vTangent;
varying vec3 vBiTangent;
varying vec3 vHalfVector;

uniform sampler2D uBumpSampler;

void main(void) {

    // Sample the texture to get our new normal in texture space
    vec3 bumpNormal = (texture2D(uBumpSampler, vTextureCoord.st)).rgb * 2.0 - 1.0;

    // Calculate diffuse against bump map
    vec3 light = normalize(vVectorToLight);
    float diffuse  = clamp(dot(light, bumpNormal), 0.0, 1.0);
        
    // Calculate specular against bump map
    vec3 specular = vec3(1.0, 1.0, 1.0) * ( pow( dot(vHalfVector, bumpNormal),2.0) );
    
    // Botch phong
    gl_FragColor = vec4(diffuse,diffuse,diffuse, 0.0) +  vec4(specular, 1.0);
}
